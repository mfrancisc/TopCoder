// {{{ VimCoder 0.3.6 <-----------------------------------------------------
// vim:filetype=cpp:foldmethod=marker:foldmarker={{{,}}}

#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

using namespace std;

// }}}

class TandemRepeats
{
  public:
    int maxLength(string dna, int k)
    {
      string base = "";

      int d = k;
      int x = 0;
      int y = x + 1;
      for(; x < dna.size(); x++) {
        int present = 0;
        for(; y < dna.size(); y++) {
          if(dna[x] == dna[y]) {
            for(int a = 0; a < base.size(); a++) {
              if(dna[x] == base[a]) {
                present = 1; 
                break;
              } 
            } 

            if(present == 0) {
              base = base + dna[x]; 
              break;
            }else if(k == 0){
              base = "";
                y = x + 1;
              break; 
            }else if(d > 0){
              d--; 
              base = base + dna[x]; 
            }else if(d == 0){
              break; 
            }
          } 

        }
      }
      cout << base << endl;

      return base.size();
    }
};